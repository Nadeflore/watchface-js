import { parseWatchFaceBin, writeWatchFaceBin } from './watchFaceBinParser'
import fileStructureInfoUIHH from './models/fileTypes/UIHH_MIBAND.json'

describe('parseWatchFaceBin()', () => {
    it('parse simple bin', () => {
        expect(parseWatchFaceBin(new Uint8Array(
            [
                0x55, 0x49, 0x48, 0x48, // Signature
                // header
                0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xb5, 0xe5, 0x3d, 0x00, 0x3d, 0x00, 0x30, 0x27,
                0x00, 0x00, 0xab, 0x86, 0x09, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff,
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                0x08, 0x00, 0x00, 0x00, // Size of biggest param
                0x0C, 0x00, 0x00, 0x00, // Size of params info: 13
                0x0a, 0x04, 0x08, 0x08, 0x10, 0x01, // First param info, size of params: 8, imagesCount: 1
                0x12, 0x04, 0x08, 0x00, 0x10, 0x08, // Background param info, offset 0, size 8
                0x0a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, // Background param x: 0, y: 0, imgid: 0
                0x00, 0x00, 0x00, 0x00, // Offset of 1st image: 0
                // Image
                0x42, 0x4D, 0x10, 0x00, 0x02, 0x00, 0x01, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x11, 0x21, 0x31, 0x41, 0x12, 0x22, 0x32, 0x42
            ]).buffer, fileStructureInfoUIHH)).toStrictEqual(
                {
                    "parameters": { "Background": { "Image": { "X": 0, "Y": 0, "ImageIndex": 0 } } },
                    "images": [
                        {
                            "pixels": new Uint8ClampedArray([
                                0x11, 0x21, 0x31, 0xFF - 0x41, // 1st pixel
                                0x12, 0x22, 0x32, 0xFF - 0x42, // 2nd pixel
                            ]),
                            "width": 2,
                            "height": 1,
                            "bitsPerPixel": 32,
                            "pixelFormat": 0x10
                        }
                    ]
                }
            )
    })
})

describe('writeWatchFaceBin()', () => {
    it('write simple bin', () => {
        expect(writeWatchFaceBin({ "Background": { "Image": { "X": 0, "Y": 0, "ImageIndex": 0 } } },
            [
                {
                    "pixels": new Uint8ClampedArray([
                        0x88, 0x84, 0x48, 0xFF - 0xBC, // 1st pixel
                        0x90, 0x44, 0x20, 0xFF - 0x88, // 2nd pixel
                    ]),
                    "width": 2,
                    "height": 1,
                    "bitsPerPixel": 32,
                    "pixelFormat": 0x10
                }
            ],
            fileStructureInfoUIHH
        )).toStrictEqual(
            new Uint8Array(
                [
                    0x55, 0x49, 0x48, 0x48, // Signature
                    // header
                    0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xb5, 0xe5, 0x3d, 0x00, 0x3d, 0x00, 0x30, 0x27,
                    0x00, 0x00, 0xab, 0x86, 0x09, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff,
                    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
                    0x08, 0x00, 0x00, 0x00, // Size of biggest param
                    0x0C, 0x00, 0x00, 0x00, // Size of params info: 13
                    0x0a, 0x04, 0x08, 0x08, 0x10, 0x01, // First param info, size of params: 8, imagesCount: 1
                    0x12, 0x04, 0x08, 0x00, 0x10, 0x08, // Background param info, offset 0, size 8
                    0x0a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, // Background param x: 0, y: 0, imgid: 0
                    0x00, 0x00, 0x00, 0x00, // Offset of 1st image: 0
                    // Image
                    0x42, 0x4D, // signature (BM)
                    0x1B, 0x00, // pixel format (8:5:6:5) abgr
                    0x02, 0x00, // width 2px
                    0x01, 0x00, // height 1px
                    0x06, 0x00, // row width 6 bytes
                    0x18, 0x00, // 24 bits per pixel
                    0x00, 0x00, // No palette
                    0x00, 0x00, // No palette transparency
                    0xBC, 0x4C, 0x31, // 1st pixel
                    0x88, 0x22, 0x32, // 2nd pixel
                ])
        )
    })
})